generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @unique @default(uuid())
  uid              Int             @unique @default(autoincrement())
  username         String          @unique
  email            String          @unique
  password         String
  createdAt        DateTime        @default(now())
  verifiedAt       DateTime?
  verificationCode String?         @unique @default(cuid())
  invited          String[]
  invitedBy        String
  invites          Invite[]
  discordId        String?         @unique
  discord          Discord?        @relation(fields: [discordId], references: [id])
  uploadKey        String?         @unique
  upload           UploadSettings? @relation(fields: [uploadKey], references: [key])
  uploads          File[]
}

model UploadSettings {
  key   String @id @unique @default(cuid())
  count Int    @default(0)
  User  User?
}

model Discord {
  id            String    @id @unique
  username      String
  discriminator String
  tag           String    @unique
  avatar        String
  banner        String?
  bannerColor   String?
  nitroType     nitroType
  user          User?
}

enum nitroType {
  NONE
  CLASSIC
  PREMIUM
}

model Invite {
  code      String   @id @unique @default(uuid())
  createdBy String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [createdBy], references: [id])
}

model File {
  fileName String 
  cdnName String @id @unique
  mimeType String
  size Int
  path String
  domain String
  uploadedAt DateTime @default(now())
  uploaderId String
  uploader User  @relation(fields: [uploaderId], references: [id])
}